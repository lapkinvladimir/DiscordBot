import discord
from discord.ext import commands
import asyncio
import datetime
import config  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
from messages import Messages  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏ –ø—Ä–µ—Ñ–∏–∫—Å–∞
TOKEN = config.BOT_TOKEN
intents = discord.Intents.all()
bot = commands.Bot(command_prefix='/', intents=intents, help_command=None)

# –§–∞–π–ª—ã –¥–ª—è –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–æ–≤
VOTE_FILE = "votes.txt"
READY_FILE = "ready.txt"

# –°–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –≥–æ–ª–æ—Å–æ–≤
POLL_MESSAGES = {}
USER_VOTES = {}

# –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
ALLOWED_USER_IDS = [453939184005283861]  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

# –ü—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π GIF-–∞–Ω–∏–º–∞—Ü–∏–∏
GIF_PATH = config.GIF_PATH

# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
def is_allowed_user():
    async def predicate(interaction: discord.Interaction):
        if interaction.user.id not in ALLOWED_USER_IDS:
            await interaction.response.send_message("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ!", ephemeral=True)
            return False
        return True
    return discord.app_commands.check(predicate)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π
@bot.tree.command(name="startpoll", description="Start Craft Awards polls")
@is_allowed_user()
async def start_polls(interaction: discord.Interaction):
    global POLL_MESSAGES
    POLL_MESSAGES = {}

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å GIF-–∞–Ω–∏–º–∞—Ü–∏–µ–π
    intro = Messages.INTRO_MESSAGE
    intro_embed = discord.Embed(title=intro["title"], description=intro["description"], color=discord.Color.gold())

    with open(GIF_PATH, "rb") as gif_file:
        gif = discord.File(gif_file, filename="animation.gif")
        intro_embed.set_image(url="attachment://animation.gif")
        await interaction.response.send_message(embed=intro_embed, file=gif)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π
    for poll in Messages.POLL_DATA:
        await asyncio.sleep(1)

        description = poll["description"] + "\n" + "\n".join(
            [f"{emoji} **{candidate}**" for emoji, candidate in poll["candidates"].items()])
        embed = discord.Embed(title=poll["title"], description=description, color=discord.Color.blue())

        msg = await interaction.followup.send(embed=embed, wait=True)

        for emoji in poll["reactions"]:
            await msg.add_reaction(emoji)

        POLL_MESSAGES[msg.id] = {"title": poll["title"], "reactions": poll["reactions"]}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–∏
@bot.event
async def on_raw_reaction_add(payload):
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Ä–µ–∞–∫—Ü–∏—é –æ—Ç —Å–∞–º–æ–≥–æ –±–æ—Ç–∞
    if payload.user_id == bot.user.id:
        return

    guild = bot.get_guild(payload.guild_id)
    channel = guild.get_channel(payload.channel_id)
    message = await channel.fetch_message(payload.message_id)
    member = guild.get_member(payload.user_id)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /startpoll
    if payload.message_id in POLL_MESSAGES:
        allowed_reactions = POLL_MESSAGES[payload.message_id]["reactions"]

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ —Ä–µ–∞–∫—Ü–∏—è –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∞
        if payload.emoji.name not in allowed_reactions:
            await message.remove_reaction(payload.emoji, member)
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª
        user_key = (payload.user_id, payload.message_id)
        if user_key in USER_VOTES:
            await message.remove_reaction(payload.emoji, member)
            return

        # –ó–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞ –≤ —Ñ–∞–π–ª –∏ —Å–ª–æ–≤–∞—Ä—å
        poll_title = POLL_MESSAGES[payload.message_id]["title"]
        emoji = payload.emoji.name
        timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")

        USER_VOTES[user_key] = emoji

        with open(VOTE_FILE, "a", encoding="utf-8") as file:
            file.write(f"{poll_title} - {member.name} - {emoji} - {timestamp}\n")

        print(f"{member.name} –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª –∑–∞ {emoji} –≤ {poll_title}")

        # –£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ –ø–æ—Å–ª–µ –∑–∞–ø–∏—Å–∏
        await message.remove_reaction(payload.emoji, member)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
@bot.tree.command(name="results", description="Get the voting results")
@is_allowed_user()
async def get_results(interaction: discord.Interaction):
    if not os.path.exists(VOTE_FILE):
        await interaction.response.send_message("üìÑ –§–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
        return

    # –ß—Ç–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    votes = {}
    with open(VOTE_FILE, "r", encoding="utf-8") as file:
        for line in file:
            poll_title, user_name, emoji, timestamp = line.strip().split(" - ")
            votes.setdefault(poll_title, {}).setdefault(emoji, []).append(user_name)

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    result_message = "üèÜ **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è**\n\n"
    for poll in Messages.POLL_DATA:
        poll_title = poll["title"]
        poll_results = []

        for emoji, candidate in poll["candidates"].items():
            voter_list = votes.get(poll_title, {}).get(emoji, [])
            vote_count = len(voter_list)
            if vote_count > 0:
                voters = ", ".join(voter_list)
                poll_results.append(f"{candidate} ‚Äî {vote_count} –≥–æ–ª–æ—Å–æ–≤ ({voters})")

        if poll_results:
            result_message += f"**{poll_title}:**\n" + "\n".join(poll_results) + "\n\n"

    if result_message.strip() == "üèÜ **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è**":
        result_message += "–ù–µ—Ç –≥–æ–ª–æ—Å–æ–≤, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å."

    await interaction.response.send_message(result_message[:2000])  # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç Discord


# –§—É–Ω–∫—Ü–∏—è on_ready –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥
@bot.event
async def on_ready():
    print(f"Bot {bot.user} is online!")
    try:
        synced = await bot.tree.sync()
        print(f"Synced {len(synced)} commands")
    except Exception as e:
        print(f"Error syncing commands: {e}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.run(TOKEN)
